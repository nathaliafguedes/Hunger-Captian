{"ast":null,"code":"import { cartAddAction } from \"./actions\";\nexport const addCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    prevCarts[item.id] = {\n      item: item,\n      selected_count: 1\n    };\n    const subtotal = 0;\n    dispatch(cartAddAction(prevCarts, subtotal));\n  };\n};\nexport const increaseCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let nextSelectedCount = prevCarts[item.id].selected_count + 1;\n    prevCarts[item.id] = {\n      'item': item,\n      'selected_count': nextSelectedCount\n    };\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(increaseCartAction(prevCarts, subtotal));\n  };\n};\nexport const decreaseCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let nextSelectedCount = prevCarts[item.id].selected_count - 1;\n\n    if (nextSelectedCount > 0) {\n      prevCarts[item.id] = {\n        \"item\": item,\n        \"selected_count\": nextSelectedCount\n      };\n    } else {\n      delete prevCarts[item.id];\n    }\n\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(decreaseCartAction(prevCarts, subtotal));\n  };\n};\n\nconst setToLocalStorage = carts => {\n  localStorage.setItem(CARTS_KEY, JSON.stringify(carts));\n};\n\nconst calculateSubtotal = carts => {\n  let subtotal = 0;\n  console.log(carts);\n\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].selected_count;\n  }\n\n  return subtotal;\n};","map":{"version":3,"names":["cartAddAction","addCart","item","dispatch","getState","prevCarts","carts","list","id","selected_count","subtotal","increaseCart","nextSelectedCount","calculateSubtotal","setToLocalStorage","increaseCartAction","decreaseCart","decreaseCartAction","localStorage","setItem","CARTS_KEY","JSON","stringify","console","log","key","Number","price"],"sources":["/Users/musubimanagement/Downloads/Hunger-Captain/frontend/src/reducks/cart/operations.js"],"sourcesContent":["import { cartAddAction } from \"./actions\";\n\nexport const addCart = (item) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    prevCarts[item.id] = { item: item, selected_count: 1 };\n    const subtotal = 0;\n    dispatch(cartAddAction(prevCarts, subtotal));\n  };\n};\nexport const increaseCart = (item) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list\n    let nextSelectedCount = prevCarts[item.id].selected_count + 1;\n    prevCarts[item.id] = { 'item': item, 'selected_count': nextSelectedCount };\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(increaseCartAction(prevCarts, subtotal))\n  }\n}\n\nexport const decreaseCart = (item) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list\n    let nextSelectedCount = prevCarts[item.id].selected_count - 1;\n    if (nextSelectedCount > 0) {\n      prevCarts[item.id] = { \"item\": item, \"selected_count\": nextSelectedCount };\n    } else {\n      delete prevCarts[item.id];\n    }\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(decreaseCartAction(prevCarts, subtotal))\n  }\n}\n\nconst setToLocalStorage = (carts) => {\n  localStorage.setItem(CARTS_KEY, JSON.stringify(carts));\n}\n\nconst calculateSubtotal = (carts) => {\n  let subtotal = 0;\n  console.log(carts);\n  for (let key in carts) {\n    subtotal += (Number(carts[key].item.price) * carts[key].selected_count);\n  }\n  return subtotal;\n} "],"mappings":"AAAA,SAASA,aAAT,QAA8B,WAA9B;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;EAC/B,OAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;IACnC,IAAIC,SAAS,GAAGD,QAAQ,GAAGE,KAAX,CAAiBC,IAAjC;IACAF,SAAS,CAACH,IAAI,CAACM,EAAN,CAAT,GAAqB;MAAEN,IAAI,EAAEA,IAAR;MAAcO,cAAc,EAAE;IAA9B,CAArB;IACA,MAAMC,QAAQ,GAAG,CAAjB;IACAP,QAAQ,CAACH,aAAa,CAACK,SAAD,EAAYK,QAAZ,CAAd,CAAR;EACD,CALD;AAMD,CAPM;AAQP,OAAO,MAAMC,YAAY,GAAIT,IAAD,IAAU;EACpC,OAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;IACnC,IAAIC,SAAS,GAAGD,QAAQ,GAAGE,KAAX,CAAiBC,IAAjC;IACA,IAAIK,iBAAiB,GAAGP,SAAS,CAACH,IAAI,CAACM,EAAN,CAAT,CAAmBC,cAAnB,GAAoC,CAA5D;IACAJ,SAAS,CAACH,IAAI,CAACM,EAAN,CAAT,GAAqB;MAAE,QAAQN,IAAV;MAAgB,kBAAkBU;IAAlC,CAArB;IACA,MAAMF,QAAQ,GAAGG,iBAAiB,CAACR,SAAD,CAAlC;IACAS,iBAAiB,CAACT,SAAD,CAAjB;IACAF,QAAQ,CAACY,kBAAkB,CAACV,SAAD,EAAYK,QAAZ,CAAnB,CAAR;EACD,CAPD;AAQD,CATM;AAWP,OAAO,MAAMM,YAAY,GAAId,IAAD,IAAU;EACpC,OAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;IACnC,IAAIC,SAAS,GAAGD,QAAQ,GAAGE,KAAX,CAAiBC,IAAjC;IACA,IAAIK,iBAAiB,GAAGP,SAAS,CAACH,IAAI,CAACM,EAAN,CAAT,CAAmBC,cAAnB,GAAoC,CAA5D;;IACA,IAAIG,iBAAiB,GAAG,CAAxB,EAA2B;MACzBP,SAAS,CAACH,IAAI,CAACM,EAAN,CAAT,GAAqB;QAAE,QAAQN,IAAV;QAAgB,kBAAkBU;MAAlC,CAArB;IACD,CAFD,MAEO;MACL,OAAOP,SAAS,CAACH,IAAI,CAACM,EAAN,CAAhB;IACD;;IACD,MAAME,QAAQ,GAAGG,iBAAiB,CAACR,SAAD,CAAlC;IACAS,iBAAiB,CAACT,SAAD,CAAjB;IACAF,QAAQ,CAACc,kBAAkB,CAACZ,SAAD,EAAYK,QAAZ,CAAnB,CAAR;EACD,CAXD;AAYD,CAbM;;AAeP,MAAMI,iBAAiB,GAAIR,KAAD,IAAW;EACnCY,YAAY,CAACC,OAAb,CAAqBC,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAehB,KAAf,CAAhC;AACD,CAFD;;AAIA,MAAMO,iBAAiB,GAAIP,KAAD,IAAW;EACnC,IAAII,QAAQ,GAAG,CAAf;EACAa,OAAO,CAACC,GAAR,CAAYlB,KAAZ;;EACA,KAAK,IAAImB,GAAT,IAAgBnB,KAAhB,EAAuB;IACrBI,QAAQ,IAAKgB,MAAM,CAACpB,KAAK,CAACmB,GAAD,CAAL,CAAWvB,IAAX,CAAgByB,KAAjB,CAAN,GAAgCrB,KAAK,CAACmB,GAAD,CAAL,CAAWhB,cAAxD;EACD;;EACD,OAAOC,QAAP;AACD,CAPD"},"metadata":{},"sourceType":"module"}